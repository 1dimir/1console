
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИнициализироватьРеквизитыФормы();
	
	ОпределитьКаталогПроектаИПутьКФайлуНастроек();
	
	ПрочитатьНастройки();
	
	ОткрытьПервыйСценарий();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	СохранитьФайлы();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыполнитьНаКлиенте(Команда)
	
	СохранитьФайлы();
	
	Выполнить(ПолучитьТекстТекущегоСценария());
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьНаСервереКоманда(Команда)
	
	СохранитьФайлыИВыполнитьСценарий(
		ПолучитьТекстТекущегоСценария()
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьСценарий(Команда)
	
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьНастройкиПоИдентификатору(ТекущиеДанные.Идентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНаКлиенте(Команда)
	
	ДиалогВыбораФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогВыбораФайла.Заголовок = НСтр("ru = 'Открыть файл сценария'");
	ДиалогВыбораФайла.Фильтр = "Текстовый файл (*.txt)|*.txt|Все файлы (*.*)|*.*";
	ДиалогВыбораФайла.МножественныйВыбор = Истина;
	
	ДиалогВыбораФайла.Показать(
		Новый ОписаниеОповещения("ОбработатьВыборФайла", ЭтотОбъект)
	);	
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборФайла(ВыбранныеФайлы, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныеФайлы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПомещаемыеФайлы = Новый Массив;
	Для Каждого ВыбранныйФайл Из ВыбранныеФайлы Цикл
		ПомещаемыеФайлы.Добавить(
			Новый ОписаниеПередаваемогоФайла(ВыбранныйФайл)
		);
	КонецЦикла;
	
	НачатьПомещениеФайлов(
		Новый ОписаниеОповещения(
			"ОбработатьПолучениеДанныхФайлов",
			ЭтотОбъект
		),
		ПомещаемыеФайлы,
		,
		Ложь,
		УникальныйИдентификатор
	);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьПолучениеДанныхФайлов(ПомещенныеФайлы, ДополнительныеПараметры) Экспорт
	
	ДобавитьСтраницыНаСервере(ПомещенныеФайлы);	

КонецПроцедуры

&НаКлиенте
Процедура ОткрытьБиблиотеку(Команда)

	Элементы.ФормаОткрытьБиблиотеку.Пометка = Не Элементы.ФормаОткрытьБиблиотеку.Пометка;
	Элементы.Файлы.Видимость = Элементы.ФормаОткрытьБиблиотеку.Пометка;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ТекущаяСтрокаЭтоКорень() Тогда
		Возврат;
	КонецЕсли;
	
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Настройки = ПараметрыФайлов.НайтиСтроки(СтруктураПоиска(ТекущиеДанные.Идентификатор));
	Если Настройки.Количество() = 0 Тогда
		Настройка = СоздатьНастройкиПоИдентификатору(
			ТекущиеДанные.Идентификатор,
			,
			ПолучитьТекстФайла(ТекущиеДанные.Идентификатор)
		);	
	Иначе
		Настройка = Настройки[0];
	КонецЕсли;
	
	Элементы.Тексты.ТекущаяСтраница = Элементы["Страница" + Настройка.ИмяРеквизита];
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если Не НоваяСтрока Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяСтрока = Элементы.Файлы.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Строка = ФайлыДерево.НайтиПоИдентификатору(ТекущаяСтрока);
	Строка.Идентификатор = Строка(Новый УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПередНачаломИзменения(Элемент, Отказ)
	
	ТекущаяСтрока = Элементы.Файлы.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат;	
	КонецЕсли;
	
	Если ФайлыДерево.НайтиПоИдентификатору(ТекущаяСтрока) = ФайлыДерево.ПолучитьЭлементы()[0] Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФайлыПередУдалением(Элемент, Отказ)
	
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьНастройкиПоИдентификатору(ТекущиеДанные.Идентификатор);

КонецПроцедуры

&НаКлиенте
Процедура ФайлыПредставлениеПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Файлы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИмяСтраницы = "Страница" + ИмяПоИдентификатору(ТекущиеДанные.Идентификатор);
	Если Элементы.Найти(ИмяСтраницы) <> Неопределено Тогда
		Элементы[ИмяСтраницы].Заголовок = ТекущиеДанные.Представление;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

&НаСервере
Процедура ИнициализироватьРеквизитыФормы()
	
	СчетчикЗакладок = 0;
	ПутьКФайлуНастроек = "";
	КаталогПроекта = "";	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИмяПоИдентификатору(Знач Идентификатор)
	
	Идентификатор = СтрЗаменить(Идентификатор, "-", "");
	Префикс = "Console2";
	
	Возврат Префикс + Идентификатор;
	
КонецФункции

&НаСервере
Функция ПредставлениеПоИдентификатору(Знач Идентификатор)
	
	ДеревоФайлов = РеквизитФормыВЗначение("ФайлыДерево");
	Строки = ДеревоФайлов.Строки.НайтиСтроки(СтруктураПоиска(Идентификатор), Истина);
	Если Строки.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат Строки[0].Представление;
	
КонецФункции

&НаКлиенте
Функция ТекущаяСтрокаЭтоКорень()
	
	ТекущаяСтрока = Элементы.Файлы.ТекущаяСтрока;
	Если ТекущаяСтрока = Неопределено Тогда
		Возврат Ложь;	
	КонецЕсли;
	
	Возврат ФайлыДерево.НайтиПоИдентификатору(ТекущаяСтрока) = ФайлыДерево.ПолучитьЭлементы()[0];
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтруктураПоиска(Идентификатор = "", ИдентификаторРодителя = "")
	
	Результат = Новый Структура();
	Если Не ПустаяСтрока(Идентификатор) Тогда
		Результат.Вставить("Идентификатор", Идентификатор);
	КонецЕсли;
	
	Если Не ПустаяСтрока(ИдентификаторРодителя) Тогда
		Результат.Вставить("ИдентификаторРодителя", ИдентификаторРодителя);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервереНаКлиентеБезКонтекста
Функция ПустойИдентификатор(Идентификатор)
	
	Возврат ПустаяСтрока(Идентификатор) Или Идентификатор = "00000000-0000-0000-0000-000000000000";
	
КонецФункции

&НаКлиенте
Функция ПолучитьТекстТекущегоСценария()
	
	ТекущаяСтраница = Элементы.Тексты.ТекущаяСтраница;
	
	Если ТекущаяСтраница = Неопределено Тогда
		Возврат "";
	КонецЕсли;
	
	Если ТекущаяСтраница.ПодчиненныеЭлементы.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	ИмяПоляТекущегоСценария = ТекущаяСтраница.ПодчиненныеЭлементы.Получить(0).Имя;
	
	Возврат ЭтаФорма[ИмяПоляТекущегоСценария];	
	
КонецФункции

#КонецОбласти

#Область ПреобразованияНастроек

&НаСервере
Процедура ПреобразоватьТаблицуВДерево()
	
	ЗначениеВРеквизитФормы(
		ПолучитьДерево(
			РеквизитФормыВЗначение("ФайлыТаблица", Тип("ТаблицаЗначений"))
		),
		"ФайлыДерево"
	);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПреобразоватьРекурсивно(ТаблицаФайлов, ТекущиеСтроки, Знач Идентификатор = "00000000-0000-0000-0000-000000000000")
	
	ПодчиненныеСтроки = ТаблицаФайлов.НайтиСтроки(СтруктураПоиска(, Идентификатор));
	Если ПодчиненныеСтроки.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтроки Цикл
		
		НоваяСтрока = ТекущиеСтроки.Добавить();
		НоваяСтрока.Идентификатор = ПодчиненнаяСтрока.Идентификатор;
		НоваяСтрока.Представление = ПодчиненнаяСтрока.Представление;
		
		ПреобразоватьРекурсивно(ТаблицаФайлов, НоваяСтрока.Строки, НоваяСтрока.Идентификатор);
		
	КонецЦикла;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ДеревоФайловПроекта()
	
	Результат = Новый ДеревоЗначений;
	Результат.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(36)));
	Результат.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	
	Корень = Результат.Строки.Добавить();
	Корень.Идентификатор = Строка(Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	Корень.Представление = "Файлы";
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ТаблицаФайловПроекта()
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("Идентификатор", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(36)));
	Результат.Колонки.Добавить("ИдентификаторРодителя", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(36)));
	Результат.Колонки.Добавить("Представление", Новый ОписаниеТипов("Строка"));
	
	Возврат Результат;
	
КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДерево(ИсходнаяТаблица)
	
	РезультатДерево = ДеревоФайловПроекта();
	КореньДерева = РезультатДерево.Строки[0];
	
	ПреобразоватьРекурсивно(ИсходнаяТаблица, КореньДерева.Строки);
	
	Возврат РезультатДерево;
	
КонецФункции

&НаСервереБезКонтекста
Процедура ДобавитьСтрокиРекурсивно(ИсходныеСтроки, ТаблицаРезультат)
	
	Для Каждого СтрокаДерева Из ИсходныеСтроки Цикл
		
		НоваяСтрока = ТаблицаРезультат.Добавить();
		НоваяСтрока.Идентификатор = СтрокаДерева.Идентификатор;
		НоваяСтрока.ИдентификаторРодителя = СтрокаДерева.Родитель.Идентификатор;
		НоваяСтрока.Представление = СтрокаДерева.Представление;
		
		ДобавитьСтрокиРекурсивно(СтрокаДерева.Строки, ТаблицаРезультат);
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьТаблицу(ИсходноеДерево)

	РезультатТаблица = ТаблицаФайловПроекта();
	
	Если ИсходноеДерево.Строки.Количество() = 0 Тогда
		Возврат РезультатТаблица;
	КонецЕсли;
	
	ДобавитьСтрокиРекурсивно(ИсходноеДерево.Строки[0].Строки, РезультатТаблица);
	
	Возврат РезультатТаблица;	
	
КонецФункции

#КонецОбласти

#Область ИсполнениеСценариев

&НаСервере
Процедура СохранитьФайлыИВыполнитьСценарий(ТекстСценария)
	
	СохранитьФайлы();
	
	ВыполнитьНаСервереБезКонтекста(ТекстСценария);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ВыполнитьНаСервереБезКонтекста(ТекстСценария)
	
	Выполнить(ТекстСценария);
	
КонецПроцедуры

#КонецОбласти

#Область РаботаСФайламиНаСервере

&НаСервере
Процедура СохранитьФайлы()
	
	МассивОписаний = Новый Массив;
	ТаблицаФайлов = ПолучитьТаблицу(РеквизитФормыВЗначение("ФайлыДерево"));
	
	Для Каждого СтрокаТаблицы Из ТаблицаФайлов Цикл
		
		Описание = Новый Структура(
			"Идентификатор, ИдентификаторРодителя, Представление",
			СтрокаТаблицы.Идентификатор,
			СтрокаТаблицы.ИдентификаторРодителя,
			СтрокаТаблицы.Представление
		);
		
		МассивОписаний.Добавить(Описание);
		
	КонецЦикла;
	
	Запись = Новый ЗаписьJSON;
	Запись.ОткрытьФайл(ПутьКФайлуНастроек);
	
	ЗаписатьJSON(Запись, МассивОписаний);
	
	Запись.Закрыть();
	
	Для Каждого СтрокаНастройки Из ПараметрыФайлов Цикл
		
		ИмяФайла = КаталогПроекта + "\" + СтрокаНастройки.Идентификатор;
		ДанныеФайла = ЭтаФорма[СтрокаНастройки.ИмяРеквизита];
		
		ЗаписьФайла = Новый ЗаписьТекста(ИмяФайла);
		ЗаписьФайла.Записать(ДанныеФайла);
		ЗаписьФайла.Закрыть();
		
	КонецЦикла;	
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекстФайла(Идентификатор)
	
	ПутьКФайлу = КаталогПроекта + "\" + Идентификатор;
	НайденныеФайлы = НайтиФайлы(ПутьКФайлу);
	Если НайденныеФайлы.Количество() = 0 Тогда
		Возврат "";
	КонецЕсли;
	
	ЧтениеФайла = Новый ЧтениеТекста;
	ЧтениеФайла.Открыть(НайденныеФайлы[0].ПолноеИмя);
	Текст = ЧтениеФайла.Прочитать();
	ЧтениеФайла.Закрыть();
	
	Возврат Текст;
	
КонецФункции

&НаСервере
Процедура ОпределитьКаталогПроектаИПутьКФайлуНастроек()
	
	ДополнениеКПути = "\1C\Console\V2";
	
	Попытка
		WScriptShell = Новый COMОбъект("WScript.Shell");
		КаталогПроекта = WScriptShell.Environment("Volatile").Item("LOCALAPPDATA") + ДополнениеКПути;
	Исключение
		КаталогПроекта = ДополнениеКПути;
	КонецПопытки;
	
	Если НайтиФайлы(КаталогПроекта).Количество() = 0 Тогда
		СоздатьКаталог(КаталогПроекта);
	КонецЕсли;
	
	ПутьКФайлуНастроек = КаталогПроекта + "\project.json";	
	Если НайтиФайлы(ПутьКФайлуНастроек).Количество() = 0 Тогда
		СоздатьКаталог(КаталогПроекта);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНастройки()
	
	Файлы = НайтиФайлы(ПутьКФайлуНастроек);
	Если Файлы.Количество() = 0 Тогда
		ЗначениеВРеквизитФормы(ДеревоФайловПроекта(), "ФайлыДерево");
		Возврат;
	КонецЕсли;
	
	ФайлНастройки = Файлы[0];
	
	Чтение = Новый ЧтениеJSON;
	Чтение.ОткрытьФайл(ФайлНастройки.ПолноеИмя);	
	МассивОписаний = ПрочитатьJSON(Чтение);	
	Чтение.Закрыть();
	
	Для Каждого Описание Из МассивОписаний Цикл
		ЗаполнитьЗначенияСвойств(ФайлыТаблица.Добавить(), Описание);		
	КонецЦикла;
	
	ПреобразоватьТаблицуВДерево();	
	
КонецПроцедуры

#КонецОбласти

#Область СтраницыИЭлементыФормы

&НаСервере 
Процедура ОткрытьПервыйСценарий()
	
	Если ФайлыТаблица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ПервыйФайл = ФайлыТаблица[0];
	
	Если Не ПустаяСтрока(ПервыйФайл.Идентификатор) Тогда
		Настройка = СоздатьНастройкиПоИдентификатору(
			ПервыйФайл.Идентификатор,
			,
			ПолучитьТекстФайла(ПервыйФайл.Идентификатор)
		);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтраницыНаСервере(ПомещенныеФайлы)
	
	Если ТипЗнч(ПомещенныеФайлы) <> Тип("Массив") Тогда
		Возврат;
	КонецЕсли;
	
	ДеревоФайловПроекта = РеквизитФормыВЗначение("ФайлыДерево");
	СтрокиКорневогоЭлемента = ДеревоФайловПроекта.Строки[0].Строки;
	
	Для Каждого ПомещенныйФайл Из ПомещенныеФайлы Цикл
		
		ИмяВременногоФайла = ПолучитьИмяВременногоФайла();
		
		ДвоичныеДанныеФайла = ПолучитьИзВременногоХранилища(ПомещенныйФайл.Хранение);
		ДвоичныеДанныеФайла.Записать(ИмяВременногоФайла);
		
		ЧтениеФайла = Новый ЧтениеТекста;
		ЧтениеФайла.Открыть(ИмяВременногоФайла);
		Текст = ЧтениеФайла.Прочитать();
		ЧтениеФайла.Закрыть();
		
		УдалитьФайлы(ИмяВременногоФайла);
		
		Идентификатор = Строка(Новый УникальныйИдентификатор);
		Файл = Новый Файл(ПомещенныйФайл.Имя);
		Представление = Файл.Имя;
		
		НоваяВеткаДерева = СтрокиКорневогоЭлемента.Добавить();
		НоваяВеткаДерева.Идентификатор = Идентификатор;
		НоваяВеткаДерева.Представление = Представление;
		
		СоздатьНастройкиПоИдентификатору(
			Идентификатор, 
			Представление,
			Текст
		);
		
	КонецЦикла;	
	
	ЗначениеВРеквизитФормы(ДеревоФайловПроекта, "ФайлыДерево");
	
КонецПроцедуры

&НаСервере
Функция ДобавитьСтраницуНаСервере(ИмяФайла = "", ТекстСценария = "")
	
	СчетчикЗакладок = СчетчикЗакладок + 1;
	Суффикс = Формат(СчетчикЗакладок, "ЧДЦ=0; ЧН=0; ЧГ=0");
	ИмяРеквизита = "Сценарий" + Суффикс;
	ИмяСтраницы = "СтраницаСценарий" + Суффикс;
	ИмяПоля = "Сценарий" + Суффикс;
	
	Реквизит = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Строка"), "");
	МассивДобавляемыхРеквизитов = Новый Массив();
	МассивДобавляемыхРеквизитов.Добавить(Реквизит);
	
	ЭтаФорма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, );
	
	НоваяСтраница = Элементы.Добавить(ИмяСтраницы, Тип("ГруппаФормы"), Элементы.Тексты);
	НоваяСтраница.Вид = ВидГруппыФормы.Страница;
	НоваяСтраница.Заголовок = ?(ПустаяСтрока(ИмяФайла), "script" + Суффикс + ".txt", ИмяФайла);
	НоваяСтраница.Видимость = Истина;
	
	НовоеПоле = Элементы.Добавить(ИмяПоля, Тип("ПолеФормы"), НоваяСтраница);
	НовоеПоле.Вид = ВидПоляФормы.ПолеТекстовогоДокумента;
	НовоеПоле.ПутьКДанным = "Сценарий" + Суффикс;
	НовоеПоле.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	
	Если Не ПустаяСтрока(ТекстСценария) Тогда
		ЭтаФорма[ИмяРеквизита] = ТекстСценария;
	КонецЕсли;
	                                           	
	Элементы.Тексты.ТекущаяСтраница = НоваяСтраница;
	
	Возврат Реквизит.Имя; 
КонецФункции

&НаСервере
Процедура УдалитьРеквизитИзПараметровФайлов(ИмяРеквизита)
	
	ТаблицаПараметрыФайлов = ПараметрыФайлов.Выгрузить();
	
	СтрокиДляУдаления = ТаблицаПараметрыФайлов.НайтиСтроки(Новый Структура("ИмяРеквизита", ИмяРеквизита));
	Для Каждого СтрокаДляУдаления Из СтрокиДляУдаления Цикл 
		ТаблицаПараметрыФайлов.Удалить(СтрокаДляУдаления);
	КонецЦикла;
	
	ПараметрыФайлов.Загрузить(ТаблицаПараметрыФайлов);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьНастройкиПоИдентификатору(Знач Идентификатор)
	
	ИмяПоля = ИмяПоИдентификатору(Идентификатор);
	
	Если ЭтаФорма.Элементы.Найти(ИмяПоля) <> Неопределено Тогда

		МассивЭлементов = Новый Массив;
		МассивЭлементов.Добавить(ИмяПоля);
		
		Элементы.Удалить(Элементы.Тексты.ТекущаяСтраница);
		
		ЭтаФорма.ИзменитьРеквизиты(, МассивЭлементов);
	КонецЕсли;
	
	УдалитьРеквизитИзПараметровФайлов(ИмяПоля);	
	
	Если Элементы.Тексты.ПодчиненныеЭлементы.Количество() > 0 Тогда
		Элементы.Тексты.ТекущаяСтраница = Элементы.Тексты.ПодчиненныеЭлементы[0];
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СоздатьНастройкиПоИдентификатору(Знач Идентификатор, Знач ЗаголовокСтраницы = "", ТекстСценария = "")
	
	Имя = ИмяПоИдентификатору(Идентификатор);
	ТипСтрока = Новый ОписаниеТипов("Строка");
	
	НовыйРеквизит = Новый РеквизитФормы(Имя, ТипСтрока);
	
	МассивДобавляемыхРеквизитов = Новый Массив();
	МассивДобавляемыхРеквизитов.Добавить(НовыйРеквизит);
	ЭтаФорма.ИзменитьРеквизиты(МассивДобавляемыхРеквизитов, );
	
	НоваяСтраница = Элементы.Добавить("Страница" + Имя, Тип("ГруппаФормы"), Элементы.Тексты);
	НоваяСтраница.Вид = ВидГруппыФормы.Страница;
	Если Не ПустаяСтрока(ЗаголовокСтраницы) Тогда
		НоваяСтраница.Заголовок = ЗаголовокСтраницы;
	Иначе
		НоваяСтраница.Заголовок = ПредставлениеПоИдентификатору(Идентификатор);
	КонецЕсли;
	НоваяСтраница.Видимость = Истина;
	
	НовоеПоле = Элементы.Добавить(Имя, Тип("ПолеФормы"), НоваяСтраница);
	НовоеПоле.Вид = ВидПоляФормы.ПолеТекстовогоДокумента;
	НовоеПоле.ПутьКДанным = Имя;
	НовоеПоле.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
	
	Если Не ПустаяСтрока(ТекстСценария) Тогда
		ЭтаФорма[Имя] = ТекстСценария;
	КонецЕсли;
	
	Элементы.Тексты.ТекущаяСтраница = НоваяСтраница;
	
	Настройка = ПараметрыФайлов.Добавить();
	Настройка.Идентификатор = Идентификатор;
	Настройка.ИмяРеквизита = Имя;
	
	Возврат Новый Структура("Идентификатор, ИмяРеквизита", Идентификатор, Имя); 
	
КонецФункции


#КонецОбласти

#КонецОбласти



